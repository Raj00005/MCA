/*!
 * Isotope PACKAGED v3.0.6
 *
 * Licensed GPLv3 for open source use
 * or Isotope Commercial License for commercial use
 *
 * https://isotope.metafizzy.co
 * Copyright 2010-2018 Metafizzy
 */

!function(t, e) {
    "function" == typeof define && define.amd ? define("jquery-bridget/jquery-bridget", ["jquery"], function(i) {
        return e(t, i)
    }) : "object" == typeof module && module.exports ? module.exports = e(t, require("jquery")) : t.jQueryBridget = e(t, t.jQuery)
}(window, function(t, e) {
    "use strict";

    function i(i, s, a) {
        function u(t, e, o) {
            var n, s = "$()." + i + '("' + e + '")';
            return t.each(function(t, u) {
                var h = a.data(u, i);
                if (!h) return void r(i + " not initialized. Cannot call methods, i.e. " + s);
                var d = h[e];
                if (!d || "_" == e.charAt(0)) return void r(s + " is not a valid method");
                var l = d.apply(h, o);
                n = void 0 === n ? l : n
            }), void 0 !== n ? n : t
        }

        function h(t, e) {
            t.each(function(t, o) {
                var n = a.data(o, i);
                n ? (n.option(e), n._init()) : (n = new s(o, e), a.data(o, i, n))
            })
        }

        function o(t) {
            !t || t && t.bridget || (t.bridget = i)
        }

        var n = Array.prototype.slice,
            s = t.console,
            r = function() {};
        return o(e || t.jQuery), i(e)
    }

    function o(t) {
        var e = function() {};
        return e.prototype = t.prototype, e.prototype.constructor = e, e
    }

    function n(t, e) {
        return t.replace(/([A-Z])/g, function(t, e) {
            return "-" + e.toLowerCase()
        })
    }

    function s(e) {
        return function() {
            var i = Array.prototype.slice.call(arguments);
            return t.each(e, function(e, o) {
                o.apply(t, i)
            })
        }
    }

    function r(t, e) {
        t.originalError = e, s.error(e)
    }

    function a(t) {
        return t.replace(/-([a-z])/g, function(t, e) {
            return e.toUpperCase()
        })
    }

    function u(t) {
        return parseFloat(t), t.indexOf("%") == -1 && !isNaN(parseFloat(t))
    }

    function h(e) {
        var i = document.createElement("div");
        return i.style.width = "200px", i.style.padding = "1px 2px 3px 4px", i.style.borderStyle = "solid", i.style.borderWidth = "1px 2px 3px 4px", i.style.boxSizing = "border-box", document.body || document.documentElement, document.body || document.documentElement.appendChild(i), i
    }

    function d(e) {
        var i = getComputedStyle(e);
        return i || r("Style returned " + i + ". Are you running this code in a hidden iframe on Firefox? See https://bit.ly/getsizebug1"), i
    }

    function l(e) {
        if (!d(e)) return {
            width: 0,
            height: 0,
            innerWidth: 0,
            innerHeight: 0,
            outerWidth: 0,
            outerHeight: 0
        };
        var i = d(e),
            s = {};
        return s.width = e.offsetWidth, s.height = e.offsetHeight, s.innerWidth = e.clientWidth, s.innerHeight = e.clientHeight, s.outerWidth = i.width, s.outerHeight = i.height, s
    }

    function f(t) {
        return t.replace(/([A-Z])/g, function(t, e) {
            return "-" + e.toLowerCase()
        })
    }

    function c(t, e) {
        return t.querySelectorAll(e)
    }

    function m(t) {
        return t.replace(/-([a-z])/g, function(t, e) {
            return e.toUpperCase()
        })
    }

    function p(t, e) {
        return t.getAttribute(e)
    }

    function y(t) {
        return t.replace(/([A-Z])/g, function(t, e) {
            return "-" + e.toLowerCase()
        })
    }

    function g(t, e) {
        return t.getAttribute(e)
    }

    function v(t, e) {
        return t.style[e] || t.style[m(e)]
    }

    function x(t, e) {
        var i = t.style;
        for (var o in e) {
            var n = m(o);
            i[n] = e[o]
        }
    }

    function b(t, e) {
        var i = t.style;
        for (var o in e) {
            var n = m(o);
            i[n] = ""
        }
